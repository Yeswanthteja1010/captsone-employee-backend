version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    ECR_REPO: "026090546767.dkr.ecr.us-east-1.amazonaws.com/finalbackend"
    IMAGE_TAG: "latest"
    SONAR_HOST_URL: "http://54.175.7.246"
    SONAR_LOGIN: "sqp_eb0cc67e329d74987818b42d969f35771edd1ba9"
    SONAR_PROJECT_KEY: "pipelinepro"


phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo Installing Maven and Docker...
      - yum install -y maven docker
      #- service docker start
 
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO



build:
    commands:
      - echo Running SonarQube analysis...
      - mvn clean verify sonar:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_LOGIN

      - echo Building the backend project...
      - mvn clean package -DskipTests

      - echo Building Docker image...
      - docker build -t $ECR_REPO:$IMAGE_TAG .

  post_build:
    commands:
      - echo Pushing Docker image to ECR...
      - docker push $ECR_REPO:$IMAGE_TAG

      - echo Updating Kubernetes manifests...
      - mkdir -p k8s-out
      - sed "s|IMAGE_PLACEHOLDER|$ECR_REPO:$IMAGE_TAG|g" k8s/backend-deployment.yaml > k8s-out/deployment.yaml
      - cp k8s/backend-service.yaml k8s-out/service.yaml
      - cp k8s/ingress.yaml k8s-out/ingress.yaml
      - cp k8s/namespace.yaml k8s-out/namespace.yaml



artifacts:
  base-directory: k8s-out
  files:
    - deployment.yaml
    - service.yaml
    - ingress.yaml
    - namespace.yaml


  
